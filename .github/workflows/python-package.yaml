name: Python package

on:
  push:
    branches:
      - "**"
    tags:
      - "v*"
  pull_request:
    branches:
      - "main"

permissions:
  contents: read

jobs:
  upload-event-file:
    name: Upload event file
    runs-on: ubuntu-latest
    steps:
      - name: Harden runner
        uses: step-security/harden-runner@a4aa98b93cab29d9b1101a6143fb8bce00e2eac4 # v2.7.1
        with:
          disable-sudo: true
          egress-policy: block

      - name: Upload
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: event-file
          path: ${{ github.event_path }}

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      attestations: write
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}

    steps:
      - name: Harden runner
        uses: step-security/harden-runner@a4aa98b93cab29d9b1101a6143fb8bce00e2eac4 # v2.7.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.codecov.io:443
            api.github.com:443
            cli.codecov.io:443
            codecov.io:443
            files.pythonhosted.org:443
            fulcio.sigstore.dev:443
            github.com:443
            objects.githubusercontent.com:443
            pypi.org:443
            raw.githubusercontent.com:443
            registry.npmjs.org:443
            rekor.sigstore.dev:443
            storage.googleapis.com:443
            uploader.codecov.io:443

      - name: Checkout repository
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          persist-credentials: false

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Generate SBOM
        if: ${{ matrix.python-version == '3.11' }}
        uses: anchore/sbom-action@7ccf588e3cf3cc2611714c2eeae48550fbc17552 # v0.15.11
        with:
          format: spdx-json
          output-file: sbom.spdx.json

      - name: Make venv
        run: make venv

      - name: Lint
        run: make lint

      - name: Test
        run: make test

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        with:
          name: test-results-${{ matrix.python-version }}
          path: test-results.xml

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@5ecb98a3c6b747ed38dc09f787459979aebb39be # v4.3.1
        with:
          files: ./coverage.xml
          flags: python-${{ matrix.python-version }}
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Build
        run: make build

      - name: Generate SBOM attestation
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' && matrix.python-version == '3.11' }}
        uses: actions/attest-sbom@7d87da1e33596bc5503e50993d8f68c7a9bdfb4d # v1.1.0
        with:
          subject-path: dist/*.whl
          sbom-path: sbom.spdx.json

      - name: Generate artifact attestation
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' && matrix.python-version == '3.11' }}
        uses: actions/attest-build-provenance@f8d5ea8082b0d9f5ab855907be308fbd7eefb155 # v1.1.0
        with:
          subject-path: dist/*.whl

      - name: Generate hashes
        id: hash
        if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') && matrix.python-version == '3.11' }}
        run: cd dist && echo "hashes=$(sha256sum * | base64 -w0)" >> $GITHUB_OUTPUT

      - name: Store the distribution packages
        uses: actions/upload-artifact@65462800fd760344b1a7b4382951275a0abb4808 # v4.3.3
        if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') && matrix.python-version == '3.11' }}
        with:
          name: python-package-distributions
          path: dist/

  provenance-and-draft-release:
    name: Generate provenance and create draft release
    if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
    needs:
      - build
      - upload-event-file
    permissions:
      actions: read
      id-token: write
      contents: write
    # Can't pin with hash due to how this workflow works.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.0.0
    with:
      base64-subjects: ${{ needs.build.outputs.hashes }}
      upload-assets: true
      draft-release: true

  publish-to-test-pypi:
    name: Publish to TestPyPI
    if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
    needs:
      - provenance-and-draft-release
    runs-on: ubuntu-latest
    environment:
      name: test-pypi
      url: https://test.pypi.org/p/cf-ips-to-hcloud-fw
    permissions:
      id-token: write

    steps:
      - name: Harden runner
        uses: step-security/harden-runner@a4aa98b93cab29d9b1101a6143fb8bce00e2eac4 # v2.7.1
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Download all the distribution packages
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          name: python-package-distributions
          path: dist

      - name: Publish distribution to TestPyPI
        uses: pypa/gh-action-pypi-publish@81e9d935c883d0b210363ab89cf05f3894778450 # v1.8.14
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: Publish to PyPI
    if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
    needs:
      - provenance-and-draft-release
      - publish-to-test-pypi
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/cf-ips-to-hcloud-fw
    permissions:
      id-token: write

    steps:
      - name: Harden runner
        uses: step-security/harden-runner@a4aa98b93cab29d9b1101a6143fb8bce00e2eac4 # v2.7.1
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Download all the distribution packages
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          name: python-package-distributions
          path: dist

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@81e9d935c883d0b210363ab89cf05f3894778450 # v1.8.14

  upload-dist-to-github-release:
    name: Upload distribution packages to GitHub Release
    if: ${{ github.event_name != 'pull_request' && startsWith(github.ref, 'refs/tags/') }}
    needs:
      - publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Harden runner
        uses: step-security/harden-runner@a4aa98b93cab29d9b1101a6143fb8bce00e2eac4 # v2.7.1
        with:
          disable-sudo: true
          egress-policy: audit

      - name: Download all the distribution packages
        uses: actions/download-artifact@65a9edc5881444af0b9093a5e628f2fe47ea3b2e # v4.1.7
        with:
          name: python-package-distributions
          path: dist

      - name: Upload distribution packages to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'
