name: Docker build

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
    tags:
      - "v*"
  pull_request:
    branches:
      - "main"

permissions:
  contents: read

jobs:
  docker:
    name: Docker build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      security-events: write
      pull-requests: write
    outputs:
      digest: ${{ steps.build-and-push.outputs.digest }}

    steps:
      - name: Harden runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          disable-sudo: true
          egress-policy: audit
          allowed-endpoints: >
            api.dso.docker.com:443
            api.github.com:443
            api.scout.docker.com:443
            auth.docker.io:443
            cdn03.quay.io:443
            files.pythonhosted.org:443
            fulcio.sigstore.dev:443
            ghcr.io:443
            github.com:443
            hub.docker.com:443
            index.docker.io:443
            nodejs.org:443
            objects.githubusercontent.com:443
            production.cloudflare.docker.com:443
            pypi.org:443
            quay.io:443
            raw.githubusercontent.com:443
            registry-1.docker.io:443
            registry.npmjs.org:443
            rekor.sigstore.dev:443
            toolbox-data.anchore.io:443
            tuf-repo-cdn.sigstore.dev:443

      - name: Checkout
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          persist-credentials: false

      - name: Install Cosign
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 # v3.5.0

      - name: Docker meta
        id: docker-meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: |
            jkreileder/cf-ips-to-hcloud-fw
            quay.io/jkreileder/cf-ips-to-hcloud-fw
            ghcr.io/jkreileder/cf-ips-to-hcloud-fw
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' && ',index' || '' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb # v3.3.0

      - name: Login to DockerHub
        if: ${{ (github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork) && github.actor != 'dependabot[bot]' }}
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Quay
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: .
          platforms: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' && 'linux/amd64,linux/arm64' || '' }}
          pull: true
          push: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
          load: ${{ github.event_name == 'pull_request' || github.actor == 'dependabot[bot]' }}
          sbom: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' && 'generator=docker/scout-sbom-indexer:1.6.4@sha256:254437e05256f393fe4b1b44e2811ec6a05ad7e67baacf70d49552af7c6ac318' || '' }}
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          annotations: ${{ steps.docker-meta.outputs.annotations }}

      - name: Sign the images with GitHub OIDC Token
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --recursive --yes ${images}
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.docker-meta.outputs.tags }}

      - name: Analyze for critical and high CVEs with Docker Scout
        if: ${{ (github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork) && github.actor != 'dependabot[bot]' }}
        id: docker-scout-cves
        continue-on-error: true
        uses: docker/scout-action@f7a51f737dc10e079eadcadfce8e38aad96a1877 # v1.7.0
        with:
          command: cves${{ !startsWith(github.ref, 'refs/tags/') && ',recommendations,compare' || '' }}
          image: jkreileder/cf-ips-to-hcloud-fw:${{ steps.docker-meta.outputs.version }}
          sarif-file: sarif.output.json
          organization: jkreileder
          to: registry://jkreileder/cf-ips-to-hcloud-fw:1

      - name: Upload Docker Scout scan result to GitHub Security tab
        if: ${{ (github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork) && github.actor != 'dependabot[bot]' }}
        continue-on-error: true
        uses: github/codeql-action/upload-sarif@4355270be187e1b672a7a1c7c7bae5afdc1ab94a # v3.24.10
        with:
          sarif_file: sarif.output.json

      - name: Scan image with Grype
        uses: anchore/scan-action@3343887d815d7b07465f6fdcd395bd66508d486a # v3.6.4
        id: grype-scan
        continue-on-error: true
        with:
          image: jkreileder/cf-ips-to-hcloud-fw:${{ steps.docker-meta.outputs.version }}
          only-fixed: true
          add-cpes-if-none: true

      - name: Upload Grype scan result to GitHub Security tab
        uses: github/codeql-action/upload-sarif@4355270be187e1b672a7a1c7c7bae5afdc1ab94a # v3.24.10
        continue-on-error: true
        with:
          sarif_file: ${{ steps.grype-scan.outputs.sarif }}

  provenance-docker:
    name: Generate SLSA Provenance for DockerHub
    if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
    needs:
      - docker
    permissions:
      actions: read
      id-token: write
      packages: write
    # Can't pin with hash due to how this workflow works.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v1.10.0
    with:
      image: jkreileder/cf-ips-to-hcloud-fw
      digest: ${{ needs.docker.outputs.digest }}
      private-repository: true
    secrets:
      registry-username: ${{ secrets.DOCKERHUB_USERNAME }}
      registry-password: ${{ secrets.DOCKERHUB_TOKEN }}

  provenance-quay:
    name: Generate SLSA Provenance for Quay
    if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
    needs:
      - docker
    permissions:
      actions: read
      id-token: write
      packages: write
    # Can't pin with hash due to how this workflow works.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v1.10.0
    with:
      image: quay.io/jkreileder/cf-ips-to-hcloud-fw
      digest: ${{ needs.docker.outputs.digest }}
      private-repository: true
    secrets:
      registry-username: ${{ secrets.QUAY_USERNAME }}
      registry-password: ${{ secrets.QUAY_TOKEN }}

  provenance-ghcr:
    name: Generate SLSA Provenance for GitHub Container Registry
    if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
    needs:
      - docker
    permissions:
      actions: read
      id-token: write
      packages: write
    # Can't pin with hash due to how this workflow works.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v1.10.0
    with:
      image: ghcr.io/jkreileder/cf-ips-to-hcloud-fw
      digest: ${{ needs.docker.outputs.digest }}
      private-repository: true
    secrets:
      registry-username: ${{ github.repository_owner }}
      registry-password: ${{ secrets.GITHUB_TOKEN }}
