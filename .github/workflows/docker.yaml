name: Docker build

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
    tags:
      - "v*"
  pull_request:
    branches:
      - "main"

permissions:
  contents: read

jobs:
  docker:
    name: Docker build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      security-events: write
      pull-requests: write
      attestations: write
    outputs:
      digest: ${{ steps.build-and-push.outputs.digest }}

    steps:
      - name: Harden runner
        uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.dso.docker.com:443
            api.github.com:443
            api.scout.docker.com:443
            auth.docker.io:443
            cdn03.quay.io:443
            files.pythonhosted.org:443
            fulcio.sigstore.dev:443
            ghcr.io:443
            github.com:443
            hub.docker.com:443
            index.docker.io:443
            nodejs.org:443
            objects.githubusercontent.com:443
            pkg-containers.githubusercontent.com:443
            production.cloudflare.docker.com:443
            pypi.org:443
            quay.io:443
            raw.githubusercontent.com:443
            registry-1.docker.io:443
            registry.npmjs.org:443
            rekor.sigstore.dev:443
            toolbox-data.anchore.io:443
            tuf-repo-cdn.sigstore.dev:443
            uploads.github.com:443

      - name: Checkout repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false

      - name: Install Cosign
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 # v3.5.0

      - name: Docker meta
        id: docker-meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: |
            ${{ vars.DOCKERHUB_USERNAME }}/cf-ips-to-hcloud-fw
            quay.io/${{ vars.QUAY_USERNAME }}/cf-ips-to-hcloud-fw
            ghcr.io/${{ github.repository_owner }}/cf-ips-to-hcloud-fw
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' && ',index' || '' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@5927c834f5b4fdf503fca6f4c7eccda82949e1ee # v3.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@4fd812986e6c8c2a69e18311145f9371337f27d4 # v3.4.0

      - name: Login to DockerHub
        if: ${{ (github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork) && github.actor != 'dependabot[bot]' }}
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Quay
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
        with:
          registry: quay.io
          username: ${{ vars.QUAY_ROBOT }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@1a162644f9a7e87d8f4b053101d1d9a712edc18c # v6.3.0
        with:
          context: .
          platforms: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' && 'linux/amd64,linux/arm64' || '' }}
          pull: true
          push: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
          load: ${{ github.event_name == 'pull_request' || github.actor == 'dependabot[bot]' }}
          sbom: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' && 'generator=docker/scout-sbom-indexer:1.10.0@sha256:c29c6fda87f94d2861ca38ac92d6d5c4c01543f081294f561b375bb3f7dbe716' || '' }}
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          annotations: ${{ steps.docker-meta.outputs.annotations }}

      - name: Generate SBOM
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: anchore/sbom-action@e8d2a6937ecead383dfe75190d104edd1f9c5751 # v0.16.0
        with:
          image: ${{ vars.DOCKERHUB_USERNAME }}/cf-ips-to-hcloud-fw
          format: spdx-json
          artifact-name: sbom-docker.spdx.json
          output-file: sbom-docker.spdx.json

      - name: Generate SBOM attestation for DockerHub
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: actions/attest-sbom@6d7733f629ce1368bd053e269afa8041a98a2b98 # v1.3.3
        with:
          subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/cf-ips-to-hcloud-fw
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          sbom-path: sbom-docker.spdx.json
          push-to-registry: true

      - name: Generate SBOM attestation for Quay
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: actions/attest-sbom@6d7733f629ce1368bd053e269afa8041a98a2b98 # v1.3.3
        with:
          subject-name: quay.io/${{ vars.QUAY_USERNAME }}/cf-ips-to-hcloud-fw
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          sbom-path: sbom-docker.spdx.json
          push-to-registry: true

      - name: Generate SBOM attestation for GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: actions/attest-sbom@6d7733f629ce1368bd053e269afa8041a98a2b98 # v1.3.3
        with:
          subject-name: ghcr.io/${{ github.repository_owner }}/cf-ips-to-hcloud-fw
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          sbom-path: sbom-docker.spdx.json
          push-to-registry: true

      - name: Generate artifact attestation for DockerHub
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: actions/attest-build-provenance@bdd51370e0416ac948727f861e03c2f05d32d78e # v1.3.2
        with:
          subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/cf-ips-to-hcloud-fw
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true

      - name: Generate artifact attestation for Quay
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: actions/attest-build-provenance@bdd51370e0416ac948727f861e03c2f05d32d78e # v1.3.2
        with:
          subject-name: quay.io/${{ vars.QUAY_USERNAME }}/cf-ips-to-hcloud-fw
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true

      - name: Generate artifact attestation for GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: actions/attest-build-provenance@bdd51370e0416ac948727f861e03c2f05d32d78e # v1.3.2
        with:
          subject-name: ghcr.io/${{ github.repository_owner }}/cf-ips-to-hcloud-fw
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true

      - name: Sign the images with GitHub OIDC Token
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --recursive --yes ${images}
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.docker-meta.outputs.tags }}

      - name: Analyze for critical and high CVEs with Docker Scout
        if: ${{ (github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork) && github.actor != 'dependabot[bot]' }}
        id: docker-scout-cves
        continue-on-error: true
        uses: docker/scout-action@fc749439af4870e8f6feb592250ab728600d10a6 # v1.10.0
        with:
          command: cves${{ !startsWith(github.ref, 'refs/tags/') && ',recommendations,compare' || '' }}
          image: ${{ vars.DOCKERHUB_USERNAME }}/cf-ips-to-hcloud-fw:${{ steps.docker-meta.outputs.version }}
          sarif-file: sarif.output.json
          organization: ${{ vars.DOCKERHUB_USERNAME }}
          to: registry://${{ vars.DOCKERHUB_USERNAME }}/cf-ips-to-hcloud-fw:1

      - name: Upload Docker Scout scan result to GitHub Security tab
        if: ${{ (github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork) && github.actor != 'dependabot[bot]' }}
        continue-on-error: true
        uses: github/codeql-action/upload-sarif@b611370bb5703a7efb587f9d136a52ea24c5c38c # v3.25.11
        with:
          sarif_file: sarif.output.json

      - name: Scan image with Grype
        uses: anchore/scan-action@3343887d815d7b07465f6fdcd395bd66508d486a # v3.6.4
        id: grype-scan
        continue-on-error: true
        with:
          image: ${{ vars.DOCKERHUB_USERNAME }}/cf-ips-to-hcloud-fw:${{ steps.docker-meta.outputs.version }}
          only-fixed: true
          add-cpes-if-none: true

      - name: Upload Grype scan result to GitHub Security tab
        uses: github/codeql-action/upload-sarif@b611370bb5703a7efb587f9d136a52ea24c5c38c # v3.25.11
        continue-on-error: true
        with:
          sarif_file: ${{ steps.grype-scan.outputs.sarif }}

  provenance-docker:
    name: Generate SLSA Provenance for DockerHub
    if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
    needs:
      - docker
    permissions:
      actions: read
      id-token: write
      packages: write
    # Can't pin with hash due to how this workflow works.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.0.0
    with:
      image: ${{ vars.DOCKERHUB_USERNAME }}/cf-ips-to-hcloud-fw
      digest: ${{ needs.docker.outputs.digest }}
      private-repository: true
      registry-username: ${{ vars.DOCKERHUB_USERNAME }}
    secrets:
      registry-password: ${{ secrets.DOCKERHUB_TOKEN }}

  provenance-quay:
    name: Generate SLSA Provenance for Quay
    if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
    needs:
      - docker
    permissions:
      actions: read
      id-token: write
      packages: write
    # Can't pin with hash due to how this workflow works.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.0.0
    with:
      image: quay.io/${{ vars.QUAY_USERNAME }}/cf-ips-to-hcloud-fw
      digest: ${{ needs.docker.outputs.digest }}
      private-repository: true
      registry-username: ${{ vars.QUAY_ROBOT }}
    secrets:
      registry-password: ${{ secrets.QUAY_TOKEN }}

  provenance-ghcr:
    name: Generate SLSA Provenance for GitHub Container Registry
    if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
    needs:
      - docker
    permissions:
      actions: read
      id-token: write
      packages: write
    # Can't pin with hash due to how this workflow works.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.0.0
    with:
      image: ghcr.io/${{ github.repository_owner }}/cf-ips-to-hcloud-fw
      digest: ${{ needs.docker.outputs.digest }}
      private-repository: true
      registry-username: ${{ github.repository_owner }}
    secrets:
      registry-password: ${{ secrets.GITHUB_TOKEN }}
