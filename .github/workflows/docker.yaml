name: Docker build

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
    tags:
      - "v*"
  pull_request:
    branches:
      - "main"

permissions:
  contents: read

jobs:
  docker:
    name: Docker build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      security-events: write
      pull-requests: write
      attestations: write
    outputs:
      digest: ${{ steps.build-and-push.outputs.digest }}

    steps:
      - name: Harden runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.dso.docker.com:443
            api.github.com:443
            api.scout.docker.com:443
            auth.docker.io:443
            cdn03.quay.io:443
            docker-images-prod.6aa30f8b08e16409b46e0173d6de2f56.r2.cloudflarestorage.com:443
            files.pythonhosted.org:443
            fulcio.sigstore.dev:443
            ghcr.io:443
            github.com:443
            grype.anchore.io:443
            hub.docker.com:443
            index.docker.io:443
            nodejs.org:443
            objects.githubusercontent.com:443
            pkg-containers.githubusercontent.com:443
            production.cloudflare.docker.com:443
            pypi.org:443
            quay.io:443
            raw.githubusercontent.com:443
            registry-1.docker.io:443
            registry.npmjs.org:443
            registry.scout.docker.com:443
            rekor.sigstore.dev:443
            toolbox-data.anchore.io:443
            tuf-repo-cdn.sigstore.dev:443
            uploads.github.com:443

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false

      - name: Install Cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3.8.1

      - name: Docker meta
        id: docker-meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        with:
          images: |
            ${{ vars.DOCKERHUB_USERNAME }}/cf-ips-to-hcloud-fw
            quay.io/${{ vars.QUAY_USERNAME }}/cf-ips-to-hcloud-fw
            ghcr.io/${{ github.repository_owner }}/cf-ips-to-hcloud-fw
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' && ',index' || '' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0

      - name: Login to DockerHub
        if: ${{ (github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork) && github.actor != 'dependabot[bot]' }}
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to Quay
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: quay.io
          username: ${{ vars.QUAY_ROBOT }}
          password: ${{ secrets.QUAY_TOKEN }}

      - name: Login to GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: .
          platforms: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' && 'linux/amd64,linux/arm64' || '' }}
          push: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
          load: ${{ github.event_name == 'pull_request' || github.actor == 'dependabot[bot]' }}
          sbom: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' && 'generator=docker/scout-sbom-indexer:1.16.@sha256:6b848dcd661ae05260e2a3245132967a3147c0414d95117f385129047198e1e6' || '' }}
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          annotations: ${{ steps.docker-meta.outputs.annotations }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate SBOM
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: anchore/sbom-action@f325610c9f50a54015d37c8d16cb3b0e2c8f4de0 # v0.18.0
        with:
          image: ${{ vars.DOCKERHUB_USERNAME }}/cf-ips-to-hcloud-fw
          format: spdx-json
          artifact-name: sbom-docker.spdx.json
          output-file: sbom-docker.spdx.json

      - name: Generate SBOM attestation for DockerHub
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: actions/attest-sbom@115c3be05ff3974bcbd596578934b3f9ce39bf68 # v2.2.0
        with:
          subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/cf-ips-to-hcloud-fw
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          sbom-path: sbom-docker.spdx.json
          push-to-registry: true

      - name: Generate SBOM attestation for Quay
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: actions/attest-sbom@115c3be05ff3974bcbd596578934b3f9ce39bf68 # v2.2.0
        with:
          subject-name: quay.io/${{ vars.QUAY_USERNAME }}/cf-ips-to-hcloud-fw
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          sbom-path: sbom-docker.spdx.json
          push-to-registry: true

      - name: Generate SBOM attestation for GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: actions/attest-sbom@115c3be05ff3974bcbd596578934b3f9ce39bf68 # v2.2.0
        with:
          subject-name: ghcr.io/${{ github.repository_owner }}/cf-ips-to-hcloud-fw
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          sbom-path: sbom-docker.spdx.json
          push-to-registry: true

      - name: Generate artifact attestation for DockerHub
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2 # v2.2.3
        with:
          subject-name: index.docker.io/${{ vars.DOCKERHUB_USERNAME }}/cf-ips-to-hcloud-fw
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true

      - name: Generate artifact attestation for Quay
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2 # v2.2.3
        with:
          subject-name: quay.io/${{ vars.QUAY_USERNAME }}/cf-ips-to-hcloud-fw
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true

      - name: Generate artifact attestation for GitHub Container Registry
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        uses: actions/attest-build-provenance@c074443f1aee8d4aeeae555aebba3282517141b2 # v2.2.3
        with:
          subject-name: ghcr.io/${{ github.repository_owner }}/cf-ips-to-hcloud-fw
          subject-digest: ${{ steps.build-and-push.outputs.digest }}
          push-to-registry: true

      - name: Sign the images with GitHub OIDC Token
        if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --recursive --yes ${images}
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.docker-meta.outputs.tags }}

      - name: Analyze for critical and high CVEs with Docker Scout
        if: ${{ (github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork) && github.actor != 'dependabot[bot]' }}
        id: docker-scout-cves
        continue-on-error: true
        uses: docker/scout-action@381b657c498a4d287752e7f2cfb2b41823f566d9 # v1.16.0
        with:
          command: cves${{ !startsWith(github.ref, 'refs/tags/') && ',recommendations,compare' || '' }}
          image: ${{ vars.DOCKERHUB_USERNAME }}/cf-ips-to-hcloud-fw:${{ steps.docker-meta.outputs.version }}
          sarif-file: sarif.output.json
          organization: ${{ vars.DOCKERHUB_USERNAME }}
          to: registry://${{ vars.DOCKERHUB_USERNAME }}/cf-ips-to-hcloud-fw:1

      - name: Upload Docker Scout scan result to GitHub Security tab
        if: ${{ (github.event_name != 'pull_request' || !github.event.pull_request.head.repo.fork) && github.actor != 'dependabot[bot]' }}
        continue-on-error: true
        uses: github/codeql-action/upload-sarif@45775bd8235c68ba998cffa5171334d58593da47 # v3.28.15
        with:
          sarif_file: sarif.output.json

      - name: Scan image with Grype
        uses: anchore/scan-action@7c05671ae9be166aeb155bad2d7df9121823df32 # v6.1.0
        id: grype-scan
        continue-on-error: true
        with:
          image: ${{ vars.DOCKERHUB_USERNAME }}/cf-ips-to-hcloud-fw:${{ steps.docker-meta.outputs.version }}
          only-fixed: true
          add-cpes-if-none: true

      - name: Upload Grype scan result to GitHub Security tab
        uses: github/codeql-action/upload-sarif@45775bd8235c68ba998cffa5171334d58593da47 # v3.28.15
        continue-on-error: true
        with:
          sarif_file: ${{ steps.grype-scan.outputs.sarif }}

  provenance-docker:
    name: Generate SLSA Provenance for DockerHub
    if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
    needs:
      - docker
    permissions:
      actions: read
      id-token: write
      packages: write
    # Can't pin with hash due to how this workflow works.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
    with:
      image: ${{ vars.DOCKERHUB_USERNAME }}/cf-ips-to-hcloud-fw
      digest: ${{ needs.docker.outputs.digest }}
      private-repository: true
      registry-username: ${{ vars.DOCKERHUB_USERNAME }}
    secrets:
      registry-password: ${{ secrets.DOCKERHUB_TOKEN }}

  provenance-quay:
    name: Generate SLSA Provenance for Quay
    if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
    needs:
      - docker
    permissions:
      actions: read
      id-token: write
      packages: write
    # Can't pin with hash due to how this workflow works.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
    with:
      image: quay.io/${{ vars.QUAY_USERNAME }}/cf-ips-to-hcloud-fw
      digest: ${{ needs.docker.outputs.digest }}
      private-repository: true
      registry-username: ${{ vars.QUAY_ROBOT }}
    secrets:
      registry-password: ${{ secrets.QUAY_TOKEN }}

  provenance-ghcr:
    name: Generate SLSA Provenance for GitHub Container Registry
    if: ${{ github.event_name != 'pull_request' && github.actor != 'dependabot[bot]' }}
    needs:
      - docker
    permissions:
      actions: read
      id-token: write
      packages: write
    # Can't pin with hash due to how this workflow works.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
    with:
      image: ghcr.io/${{ github.repository_owner }}/cf-ips-to-hcloud-fw
      digest: ${{ needs.docker.outputs.digest }}
      private-repository: true
      registry-username: ${{ github.repository_owner }}
    secrets:
      registry-password: ${{ secrets.GITHUB_TOKEN }}
