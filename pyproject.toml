[build-system]
requires = ["setuptools>=69"]
build-backend = "setuptools.build_meta"

[project]
name = "cf-ips-to-hcloud-fw"
authors = [{ name = "JÃ¼rgen Kreileder" }, { email = "jk@blackdown.de" }]
description = "Update Hetzner Cloud firewall rules with Cloudflare IP ranges"
keywords = ["cloudflare", "hcloud", "hetzner", "firewall", "cli"]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.9"
dynamic = ["version", "dependencies", "optional-dependencies"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Internet",
    "Topic :: System :: Networking :: Firewalls",
    "Topic :: Utilities",
]

[project.scripts]
cf-ips-to-hcloud-fw = "cf_ips_to_hcloud_fw.__main__:main"

[project.urls]
Homepage = "https://github.com/jkreileder/cf-ips-to-hcloud-fw"
Source = "https://github.com/jkreileder/cf-ips-to-hcloud-fw"
Changelog = "https://github.com/jkreileder/cf-ips-to-hcloud-fw/blob/main/CHANGELOG.md"
Documentation = "https://github.com/jkreileder/cf-ips-to-hcloud-fw"
Issues = "https://github.com/jkreileder/cf-ips-to-hcloud-fw/issues"
Twitter = "https://twitter/jkreileder"
Bluesky = "https://bsky.app/profile/jk.blackdown.de"
PyPI = "https://pypi.org/project/cf-ips-to-hcloud-fw/"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = { attr = "cf_ips_to_hcloud_fw.__VERSION__" }
dependencies = { file = ["requirements-pep508.txt"] }
optional-dependencies.dev = { file = ["requirements-dev-pep508.txt"] }

[tool.pytest.ini_options]
pythonpath = ["src", "tests"]
junit_family = "xunit1" # required by https://github.com/EnricoMi/publish-unit-test-result-action
addopts = """
    --junit-xml=test-results.xml
    --cov=src
    --cov-branch
    --cov-report=xml
    --cov-report=html
    --cov-report=term-missing
    --cov-fail-under=80
"""

[tool.pyright]
include = ["src", "tests"]
strict = ["src", "tests"]
reportMissingImports = true
reportMissingTypeStubs = true
venv = "venv"

[tool.ruff]
src = ["src"]
preview = true

[tool.ruff.lint]
extend-select = [
    "A",
    "ANN",
    "ARG",
    "B",
    "BLE",
    "C4",
    "C90",
    "COM",
    "E",
    "EM",
    "ERA001",
    "EXE",
    "F",
    "FA",
    "FBT",
    "FLY",
    "FURB",
    "I",
    "ICN",
    "ISC",
    "LOG",
    "N",
    "PERF",
    "PIE",
    "PGH",
    "PL",
    "PT",
    "PYI",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SIM",
    "SLF",
    "SLOT",
    "T20",
    "TCH",
    "TID",
    "TRY",
    "UP",
    "W",
]
ignore = [
    "COM812",
    "COM819",
    "E111",
    "E114",
    "E117",
    "D206",
    "D300",
    "Q000",
    "Q001",
    "Q002",
    "Q003",
    "ISC001",
    "ISC002",
    "W191",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "SLF001"]

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = ["pydantic.BaseModel"]

[tool.pip-tools]
generate-hashes = false
newline = "LF"
quiet = true
strip-extras = false
upgrade = true
